<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ChatGPT:不能用来摸鱼的AI不是好AI</title>
    <url>/posts/2f0634a9/</url>
    <content><![CDATA[<h1 id="ChatGPT-不能用来摸鱼的AI不是好AI"><a href="#ChatGPT-不能用来摸鱼的AI不是好AI" class="headerlink" title="ChatGPT: 不能用来摸鱼的AI不是好AI"></a>ChatGPT: 不能用来摸鱼的AI不是好AI</h1><p>最近ChatGPT的大火，使得很多的行业面临大洗牌，很多人都说要被GPT优化了，本来咱这个职业吧，跟ChatGPT可以说是八竿子打不着，无非也就是当个电子宠物玩玩。</p>
<p>不过最近在少数派看了篇文章，说可以用chatGPT直接生成markdown文档，再把markdown文档转为PPT演示文稿…..</p>
<p>诶这我就来兴趣了。</p>
<p>这多好的摸鱼工具阿，以后什么政治教育，双争教育，爱国主义教育，直接一步到位，还费心思写什么稿子，做什么ppt，这好哇，这可太好了。</p>
<p>但同时我也对其实现的可能性存在一定的质疑，主要在两方面：</p>
<blockquote>
<ol>
<li>chatGPT真的能实现一篇逻辑清晰，层次分明的文章么？</li>
<li>Markdown文件转为PPT的可行性有多少?</li>
</ol>
</blockquote>
<p>于是我分别就这两个问题进行了探究。</p>
<h2 id="ChatGPT实现文章撰写"><a href="#ChatGPT实现文章撰写" class="headerlink" title="ChatGPT实现文章撰写"></a>ChatGPT实现文章撰写</h2><h3 id="chatGPT的部署与使用"><a href="#chatGPT的部署与使用" class="headerlink" title="chatGPT的部署与使用"></a>chatGPT的部署与使用</h3><p>网络上有很多种方式可以部署chatGPT，有些是客户端，有些是网站部署，这里推荐Github上两个最主流的项目</p>
<blockquote>
<p>ChatGPT-Next-Web   ChatGPT Desktop Application</p>
</blockquote>
<h4 id="ChatGPT-Next-Web"><a href="#ChatGPT-Next-Web" class="headerlink" title="ChatGPT-Next-Web"></a>ChatGPT-Next-Web</h4><blockquote>
<p><a href="https://github.com/Yidadaa/ChatGPT-Next-Web">ChatGPT-Next-Web</a> 这个项目是利用使用 Vercel 一键部署的Next.js项目，可以直接fork原项目后，将自己仓库的rep部署到vercel，简便可靠。</p>
</blockquote>
<p>部署主要有以下几个步骤。</p>
<p>首先，我们要登录openai网站获取OpenAI API key</p>
<p><strong>第一步</strong>：挂上梯子，这里推荐<a href="https://dt666.xyz/">灯塔 Cloud </a>，可选择的线路比较多，可及时更换。<br><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427201916557.png" alt="image-20230427201916557"></p>
<p><strong>第二步</strong>：注册账号，并登录openAI官网，看似很简单，实则到处都是坑。</p>
<blockquote>
<p>！如果注册输入邮箱后，出现这个提示，说明这个邮箱被OpenAI拒绝注册了，目前QQ邮箱,foxmail邮箱，163邮箱，网易邮箱yeah.net，126邮箱，新浪邮箱，Outlook、hotmail邮箱，eud.cn邮箱以及其他以.cn结尾的邮箱全部都不能注册了 ，最好的办法就是注册一个Google账号，直接快捷登录。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202043393.png" alt="image-20230427202043393"></p>
</blockquote>
<blockquote>
<p>！如果输入跳转后提示 OpenAI’s services are not available in your country 说明你所在的地区不被允许登录，目前香港和台湾代理用不了的，最好用韩国或者北美的线路。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427201947140.png" alt="image-20230427201947140"></p>
</blockquote>
<blockquote>
<p>！登录的时候，又有一个手机号验证的过程，看了崔大的博客找到一个方法，可以花一块钱到<a href="https://sms-activate.org/">sms-active</a>买一个手机号接收验证码。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202001048.png" alt="image-20230427202001048"></p>
<p>把手机号输入进去，就能通过手机验证了。</p>
</blockquote>
<p><strong>第三步</strong> 获取openAI api key</p>
<p>登录API keys - <a href="https://platform.openai.com/account/api-keys">OpenAI API</a>，点击<code>View api key</code>查看账号Api key，自己新建一个然后保存。<br><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202157143.png" alt="image-20230427202157143"></p>
<p><strong>第四步</strong> 将项目部署到Vercel上</p>
<p>参考ChatGPT-Next-Web(<a href="https://github.com/Yidadaa/ChatGPT-Next-Web)%E9%A1%B9%E7%9B%AE%E8%87%AA%E5%B8%A6%E7%9A%84%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E%EF%BC%8C%E5%A4%A7%E6%A6%82%E5%B0%B1%E6%98%AF%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BE%93%E5%85%A5API">https://github.com/Yidadaa/ChatGPT-Next-Web)项目自带的中文说明，大概就是创建一个项目，然后输入API</a> Key 和 配置密码code，点击部署，完成。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202207102.png" alt="image-20230427202207102"></p>
<p>然后打开项目就可以使用了。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202216433.png" alt="image-20230427202216433"></p>
<p>说实话UI界面做的还挺好看的。</p>
<p><strong>补充</strong> 给网站挂上域名</p>
<p>由于versel生成的地址太复杂而且很难记，为了简便使用我们可以给它挂个域名。</p>
<p>（域名最近出了点问题，自己看教程吧）</p>
<h4 id="ChatGPT-Desktop-Application"><a href="#ChatGPT-Desktop-Application" class="headerlink" title="ChatGPT Desktop Application"></a>ChatGPT Desktop Application</h4><blockquote>
<p><a href="https://github.com/lencx/ChatGPT">ChatGPT Desktop Application</a> 这个项目是一个多平台的客户端，可以实现很多网页浏览器不能实现的功能，直接下载使用。</p>
</blockquote>
<p>下载就完事了，注意一下版本不要下错了，windows 是msi文件，linux是deb文件,以windows为例，登录后界面是这样的</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202236458.png" alt="image-20230427202236458"></p>
<h3 id="chatgpt功能测试"><a href="#chatgpt功能测试" class="headerlink" title="chatgpt功能测试"></a>chatgpt功能测试</h3><p>作为一个经常需要做PPT(hu nong ling dao)的小排，我就直奔主题了，这次，我们来看看chatGPT能不能给我直接实现一篇markdown的教案。</p>
<p>话不多说，开搞。</p>
<p>首先我问了他这样一个问题。<br><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202249271.png" alt="image-20230427202249271"></p>
<p>他的回答是这样的<br><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202254794.png" alt="image-20230427202254794"></p>
<p>还行，但是感觉这个分点有点乱，正常我们上个教育一般都是分三个大点，然后每个大点里面再分三四个小点，这种层次的布局会更适合授课。</p>
<p>于是我调整了一下思路，给他设定了一下范围，并且给出了每个大点围绕的具体内容。</p>
<p>这是GPT的回答。<br><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202312249.png" alt="image-20230427202312249"></p>
<p>我简直可以拍手叫绝了，这个结构完完全全已经符合授课的要求了，如果能够再润色一下语言，那么这绝对是一篇牛逼的稿子。</p>
<p>总的来说，ChatGPT虽然不能直接给出一篇优秀的稿子，但是可以给我们的写作提供思路，比如如果你想写一篇关于挫折的文章，你就可以这样来收集信息</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202320460.png" alt="image-20230427202320460"></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202323843.png" alt="image-20230427202323843"></p>
<p>如果临时进行演讲，这将成为一个极其高效的工具。</p>
<h2 id="实现Markdown-PPT转换"><a href="#实现Markdown-PPT转换" class="headerlink" title="实现Markdown-PPT转换"></a>实现Markdown-PPT转换</h2><h3 id="Mindshow-fun"><a href="#Mindshow-fun" class="headerlink" title="Mindshow.fun"></a>Mindshow.fun</h3><p>简单看了下Mindshow这个软件，号称可以直接将markdown转换为ppt，于是我就先拿这个软件来开刀了。</p>
<p>这个软件覆盖的平台还蛮多的，从MacOS到Linux都覆盖了，开发者也是野心相当的大，还几乎处于测试阶段就全覆盖平台。</p>
<p>为了方便，我下了个windows的用，因为一般干工作上的活都是用的windows，写代码才开linux。</p>
<p>打开界面如下，导入的话可以选额md，word还有幕布格式。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202339958.png" alt="image-20230427202339958"></p>
<p>我们选择md格式，稍微调整了一下位置，我们把他下载下来看看效果。</p>
<blockquote>
<p>！第一个问题：兼容性不太好，wps显示数字就会乱码</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202347507.png" alt="image-20230427202347507"></p>
</blockquote>
<p>我们再来看看布局和页面有没有问题，看了一下效果，觉得还是比较满意的，每个插入的模块不管是图片还是文字都是可以拖动更改的而不是图片，这点做的很不错。</p>
<blockquote>
<p>!但是有个问题就在于，每个页面没有把最大的标题加上，这样看起来显得逻辑性不好，而且也不便于讲解者理清思路，他给出的模型是这样的</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202354321.png" alt="image-20230427202354321"></p>
<p>这里有几个问题，我标记出来了</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202402376.png" alt="image-20230427202402376"></p>
<blockquote>
<p>第一个问题，不需要数字标记的小点符号<br>第二个问题：正常我们每个页面除了本级的小标题还应该有个上级的大标题，这里如果没加上会显得东一句西一句，逻辑很乱。<br>第三个问题：每个小点只能对应一张幻灯片，如果需要一个小点讲两张片子，就不行了，这个问题可以解决一下。</p>
</blockquote>
</blockquote>
<p>总的来说，Mindshow可以实现从Markdown转PPT的操作，但是还有一些小的细节需要打磨一下，这样的话就更加符合正常ppt使用的习惯，就分页这点来说，我觉得可以借鉴一下Marp的做法。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20230427202417087.png" alt="image-20230427202417087"></p>
<p>像这样用分割线来表示分页我觉得是一个很不错的想法，只要每次分割还保留本级和上级标题就可以实现我们正常使用的功能了。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>ChatGPT—Markdown—PPT 这个工作流虽然还存在一些技术性问题需要修改，但是不得不说这无形之中给未来的公职人员提出了更高的要求，如果只是会做毫无建树，毫无创新的工作，迟早有天会被AI所优化的。</p>
<p>总结，摸鱼很好用，躺着收课件指日可待。</p>
]]></content>
      <categories>
        <category>Talk</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>Markdown</tag>
        <tag>PPT</tag>
      </tags>
  </entry>
  <entry>
    <title>My year 2022</title>
    <url>/posts/2a24d052/</url>
    <content><![CDATA[<p>就这样，二十三了.</p>
<p>这个生日过的很草率，但并不是无奈之举。</p>
<p>我故意的。</p>
<p>我也可以热热闹闹的叫上一大帮人，觥筹交错，贺词不断，但我觉得太俗套，我就想看看，一个人买蛋糕，点蜡烛，许愿，是种什么感觉。</p>
<p>体验极差。</p>
<p>我还是高估了我的饭量。</p>
<p>在连队里，每次生日我都参加了，气氛很热烈，氛围很浓厚，但是总感觉少了点什么。</p>
<p>后来才发现，少了一个人的独处时光。</p>
<p>点燃一根蜡烛，静静的思考，这种时刻弥足珍贵，闭上眼，过往历历在目，前路愈加清晰。</p>
<p>跨越年岁的重大时刻，最该陪伴你的，不是父母，不是好友，也不是情人，而是你自己。</p>
<p>呼朋引伴，把自己喝的七荤八素，不省人事，这不叫长大一岁，这叫老了一岁。</p>
<p>我觉得长大是需要思考的，而思考需要安静的环境，独处才能安静。</p>
<p>贾平凹说，生命是孤独的旅程，林清玄说，孤独是一个人的清欢，周国平说，要有敢于面对孤独的勇气。</p>
<p>都不如村上说的一句话，人与人之间的沟通和理解几乎是不可能的。任何尝试都可能是徒劳的。</p>
<p>非常直白，也非常真实，孤独是人生常态，越早理解这个道理，就越早得到自由。</p>
<p>这就是我二十三岁生日学会的道理。</p>
<p>祝自己生日快乐，喜怒哀乐一笔勾销，从此开始新的逍遥。</p>
<p><img src="https://s2.loli.net/2022/05/29/V23ceFhztY6Njg8.jpg"></p>
]]></content>
      <categories>
        <category>Article</category>
      </categories>
      <tags>
        <tag>Years</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora+picgo+oss快速搭建hexo博客图床</title>
    <url>/posts/d9ee7cbb/</url>
    <content><![CDATA[<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><blockquote>
<p>准备工作</p>
<ul>
<li>Picgo下载</li>
<li>OSS对象储存服务开通</li>
</ul>
<p>图床配置</p>
<ul>
<li>Typora配置</li>
<li>Picgo配置</li>
</ul>
<p>测试上传情况</p>
</blockquote>
<p>很长一段时间没有更新博客了，听说Typora收费了，幸好我的版本从来没更新过哈哈哈哈</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007103457780.png" alt="image-20221007103457780"></p>
<hr>
<p>但是呢，这次又遇到了一个问题，之前搭建的smms图床不能用了，怎么调试都没办法，之前崩了之后只要更新下API  key 就行了，这次怎么更新都没有用，可能是smms也开始收费了。</p>
<p>当你上传时候出现这个问题的时候，那就说明你的图床崩了。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007085519282.png" alt="image-20221007085519282"></p>
<p>打开<code>文件</code>—<code>偏好设置</code>-<code>图片</code>，我们会看到这个选项。</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007090126052.png" alt="image-20221007090126052"></p>
<p>点击<code>验证个图片上传选项</code>，验证一下图片上传。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[PicGo INFO]: Before transform</span><br><span class="line">[PicGo INFO]: Transforming...</span><br><span class="line">[PicGo INFO]: Before upload</span><br><span class="line">[PicGo INFO]: Uploading...</span><br><span class="line">[PicGo WARN]: failed</span><br><span class="line">[PicGo ERROR]: RequestError: Error: connect ECONNREFUSED 104.21.83.45:443</span><br></pre></td></tr></table></figure>

<p>恩。。确实是崩了。</p>
<p>接下来我们就利用picgo+oss搭建一个图床供typora使用。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="picgo下载"><a href="#picgo下载" class="headerlink" title="picgo下载"></a>picgo下载</h4><p>首先我们前往Github主页下载picgo最新版本  </p>
<p><a href="https://github.com/Molunerfinn/PicGo/releases">Picgo</a></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104038135.png" alt="image-20221007104038135"></p>
<p>如果不会科学上网的这里还有一个腾讯COS的下载链接</p>
<p><a href="https://picgo-1251750343.cos.ap-chengdu.myqcloud.com/2.3.1-beta.6/PicGo-2.3.1-beta.6.AppImage">Picgo-TecentCOS</a></p>
<p>下载好之后执行以下指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod a+x PicGo-2.3.1-beta.6.AppImage   #权限</span><br><span class="line">sudo mv PicGo-2.3.1-beta.6.AppImage picgo#重命名</span><br><span class="line">sudo mv picgo /usr/bin #该目录已包含于环境变量，可直接通过picgo指令打开</span><br></pre></td></tr></table></figure>



<p>打开之后它是这样的</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104113254.png" alt="image-20221007104113254"></p>
<p>你得右键打开主界面</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104134513.png" alt="image-20221007104134513"></p>
<h4 id="OSS云对象储存服务"><a href="#OSS云对象储存服务" class="headerlink" title="OSS云对象储存服务"></a>OSS云对象储存服务</h4><p><strong>打开阿里云</strong> </p>
<p><strong>搜索对象储存oss</strong></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104246741.png" alt="image-20221007104246741"></p>
<p><strong>切换至概况一栏</strong></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104334529.png" alt="image-20221007104334529"></p>
<p><strong>点击建立bucket</strong></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104441930.png" alt="image-20221007104441930"></p>
<p><strong># 上图源自CSDN，本人懒</strong></p>
<p><strong>切换至bucket概览，记录下你的地域节点</strong> </p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104523311.png" alt="image-20221007104523311">我这里是广州，所以是<code>oss-cn-guangzhou</code></p>
<p><strong>右上角点击你的头像选择AccessKey管理</strong></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007104545235.png" alt="image-20221007104545235"></p>
<p>这个不用管他，继续使用</p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007101544965.png" alt="image-20221007101544965"></p>
<p><strong>创建一个新的Access key，然后记住你的ID和Secret</strong></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007101612928.png" alt="image-20221007101612928"></p>
<p>到这里oss服务就配置完成了，接下来我们就可以开始在本级搭建图床了。</p>
<h3 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h3><h4 id="Picgo配置"><a href="#Picgo配置" class="headerlink" title="Picgo配置"></a>Picgo配置</h4><p><strong>打开picgo主界面，点击<code>图床设置 </code>- <code>阿里云oss</code></strong></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007102114993.png" alt="image-20221007102114993"></p>
<p>这里的keyID和keySecret填写刚才我们建立AccessKey时候得到的两串代码，Bucket填写你建立的bucket名字，储存区域就填写刚才的地域节点，储存路径这个，随便写一个就行了。</p>
<h4 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h4><p>同样，打开<code>文件</code>-<code>偏好设置</code>-<code>图片</code></p>
<p><img src="https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/image-20221007102515260.png" alt="image-20221007102515260"></p>
<p>将上传服务由Picgo-commandline改为Picgo-app，而后Picgo路径填写我们刚刚移动Picgo</p>
<p>到达的位置<code>/usr/bin/picgo</code></p>
<h3 id="测试上传情况"><a href="#测试上传情况" class="headerlink" title="测试上传情况"></a>测试上传情况</h3><p>点击验证图片上传情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;&quot;success&quot;:true,&quot;result&quot;:[&quot;https://blogqc.oss-cn-guangzhou.aliyuncs.com/image/typora-icon2.png&quot;,&quot;https://xxx.oss-cn-guangzhou.aliyuncs.com/image/typora-icon.png&quot;]&#125;</span><br></pre></td></tr></table></figure>

<p>成功。</p>
]]></content>
      <categories>
        <category>Talk</category>
      </categories>
      <tags>
        <tag>踩过的坑</tag>
        <tag>typora</tag>
        <tag>picgo</tag>
        <tag>oss</tag>
      </tags>
  </entry>
</search>
